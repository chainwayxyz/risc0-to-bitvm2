pragma circom 2.0.4;

include "risc0.circom";

template Verify() {
  signal input iop[25749];
  signal out_tmp[32];
  signal output out[4];
  signal output codeRoot;
  component iop_init = iop_init_impl();
  component comp_1 = hash_impl(16);
  comp_1.in[0] <== 82;
  comp_1.in[1] <== 73;
  comp_1.in[2] <== 83;
  comp_1.in[3] <== 67;
  comp_1.in[4] <== 48;
  comp_1.in[5] <== 95;
  comp_1.in[6] <== 83;
  comp_1.in[7] <== 84;
  comp_1.in[8] <== 65;
  comp_1.in[9] <== 82;
  comp_1.in[10] <== 75;
  comp_1.in[11] <== 58;
  comp_1.in[12] <== 118;
  comp_1.in[13] <== 49;
  comp_1.in[14] <== 95;
  comp_1.in[15] <== 95;
  component comp_2 = iop_commit_impl();
  comp_2.old_iop <== iop_init.iop;
  comp_2.digest <== comp_1.out;
  component comp_3 = hash_impl(16);
  comp_3.in[0] <== 82;
  comp_3.in[1] <== 69;
  comp_3.in[2] <== 67;
  comp_3.in[3] <== 85;
  comp_3.in[4] <== 82;
  comp_3.in[5] <== 83;
  comp_3.in[6] <== 73;
  comp_3.in[7] <== 79;
  comp_3.in[8] <== 78;
  comp_3.in[9] <== 58;
  comp_3.in[10] <== 114;
  comp_3.in[11] <== 101;
  comp_3.in[12] <== 118;
  comp_3.in[13] <== 49;
  comp_3.in[14] <== 118;
  comp_3.in[15] <== 49;
  component comp_4 = iop_commit_impl();
  comp_4.old_iop <== comp_2.new_iop;
  comp_4.digest <== comp_3.out;
  component comp_5 = hash_impl(33);
  comp_5.in[0] <== iop[0];
  comp_5.in[1] <== iop[1];
  comp_5.in[2] <== iop[2];
  comp_5.in[3] <== iop[3];
  comp_5.in[4] <== iop[4];
  comp_5.in[5] <== iop[5];
  comp_5.in[6] <== iop[6];
  comp_5.in[7] <== iop[7];
  comp_5.in[8] <== iop[8];
  comp_5.in[9] <== iop[9];
  comp_5.in[10] <== iop[10];
  comp_5.in[11] <== iop[11];
  comp_5.in[12] <== iop[12];
  comp_5.in[13] <== iop[13];
  comp_5.in[14] <== iop[14];
  comp_5.in[15] <== iop[15];
  comp_5.in[16] <== iop[16];
  comp_5.in[17] <== iop[17];
  comp_5.in[18] <== iop[18];
  comp_5.in[19] <== iop[19];
  comp_5.in[20] <== iop[20];
  comp_5.in[21] <== iop[21];
  comp_5.in[22] <== iop[22];
  comp_5.in[23] <== iop[23];
  comp_5.in[24] <== iop[24];
  comp_5.in[25] <== iop[25];
  comp_5.in[26] <== iop[26];
  comp_5.in[27] <== iop[27];
  comp_5.in[28] <== iop[28];
  comp_5.in[29] <== iop[29];
  comp_5.in[30] <== iop[30];
  comp_5.in[31] <== iop[31];
  comp_5.in[32] <== iop[32];
  component comp_6 = iop_commit_impl();
  comp_6.old_iop <== comp_4.new_iop;
  comp_6.digest <== comp_5.out;
  signal local_7;
  local_7 <== iop[32] * 268435454;
  signal local_8;
  local_8 <== local_7 - 18;
  component comp_9 = normalize_impl(59);
  comp_9.in <== local_8 + 2013265921;
  comp_9.out === 0;
  component comp_10 = hash_fold_impl(2);
  comp_10.in[0] <== iop[63];
  comp_10.in[1] <== iop[64];
  component comp_11 = hash_fold_impl(2);
  comp_11.in[0] <== iop[61];
  comp_11.in[1] <== iop[62];
  component comp_12 = hash_fold_impl(2);
  comp_12.in[0] <== iop[59];
  comp_12.in[1] <== iop[60];
  component comp_13 = hash_fold_impl(2);
  comp_13.in[0] <== iop[57];
  comp_13.in[1] <== iop[58];
  component comp_14 = hash_fold_impl(2);
  comp_14.in[0] <== iop[55];
  comp_14.in[1] <== iop[56];
  component comp_15 = hash_fold_impl(2);
  comp_15.in[0] <== iop[53];
  comp_15.in[1] <== iop[54];
  component comp_16 = hash_fold_impl(2);
  comp_16.in[0] <== iop[51];
  comp_16.in[1] <== iop[52];
  component comp_17 = hash_fold_impl(2);
  comp_17.in[0] <== iop[49];
  comp_17.in[1] <== iop[50];
  component comp_18 = hash_fold_impl(2);
  comp_18.in[0] <== iop[47];
  comp_18.in[1] <== iop[48];
  component comp_19 = hash_fold_impl(2);
  comp_19.in[0] <== iop[45];
  comp_19.in[1] <== iop[46];
  component comp_20 = hash_fold_impl(2);
  comp_20.in[0] <== iop[43];
  comp_20.in[1] <== iop[44];
  component comp_21 = hash_fold_impl(2);
  comp_21.in[0] <== iop[41];
  comp_21.in[1] <== iop[42];
  component comp_22 = hash_fold_impl(2);
  comp_22.in[0] <== iop[39];
  comp_22.in[1] <== iop[40];
  component comp_23 = hash_fold_impl(2);
  comp_23.in[0] <== iop[37];
  comp_23.in[1] <== iop[38];
  component comp_24 = hash_fold_impl(2);
  comp_24.in[0] <== iop[35];
  comp_24.in[1] <== iop[36];
  component comp_25 = hash_fold_impl(2);
  comp_25.in[0] <== iop[33];
  comp_25.in[1] <== iop[34];
  component comp_26 = hash_fold_impl(2);
  comp_26.in[0] <== comp_11.out;
  comp_26.in[1] <== comp_10.out;
  component comp_27 = hash_fold_impl(2);
  comp_27.in[0] <== comp_13.out;
  comp_27.in[1] <== comp_12.out;
  component comp_28 = hash_fold_impl(2);
  comp_28.in[0] <== comp_15.out;
  comp_28.in[1] <== comp_14.out;
  component comp_29 = hash_fold_impl(2);
  comp_29.in[0] <== comp_17.out;
  comp_29.in[1] <== comp_16.out;
  component comp_30 = hash_fold_impl(2);
  comp_30.in[0] <== comp_19.out;
  comp_30.in[1] <== comp_18.out;
  component comp_31 = hash_fold_impl(2);
  comp_31.in[0] <== comp_21.out;
  comp_31.in[1] <== comp_20.out;
  component comp_32 = hash_fold_impl(2);
  comp_32.in[0] <== comp_23.out;
  comp_32.in[1] <== comp_22.out;
  component comp_33 = hash_fold_impl(2);
  comp_33.in[0] <== comp_25.out;
  comp_33.in[1] <== comp_24.out;
  component comp_34 = hash_fold_impl(2);
  comp_34.in[0] <== comp_27.out;
  comp_34.in[1] <== comp_26.out;
  component comp_35 = hash_fold_impl(2);
  comp_35.in[0] <== comp_29.out;
  comp_35.in[1] <== comp_28.out;
  component comp_36 = hash_fold_impl(2);
  comp_36.in[0] <== comp_31.out;
  comp_36.in[1] <== comp_30.out;
  component comp_37 = hash_fold_impl(2);
  comp_37.in[0] <== comp_33.out;
  comp_37.in[1] <== comp_32.out;
  component comp_38 = hash_fold_impl(2);
  comp_38.in[0] <== comp_35.out;
  comp_38.in[1] <== comp_34.out;
  component comp_39 = hash_fold_impl(2);
  comp_39.in[0] <== comp_37.out;
  comp_39.in[1] <== comp_36.out;
  component comp_40 = hash_fold_impl(2);
  comp_40.in[0] <== comp_39.out;
  comp_40.in[1] <== comp_38.out;
  out_tmp[0] <== iop[0];
  out_tmp[1] <== iop[1];
  out_tmp[2] <== iop[2];
  out_tmp[3] <== iop[3];
  out_tmp[4] <== iop[4];
  out_tmp[5] <== iop[5];
  out_tmp[6] <== iop[6];
  out_tmp[7] <== iop[7];
  out_tmp[8] <== iop[8];
  out_tmp[9] <== iop[9];
  out_tmp[10] <== iop[10];
  out_tmp[11] <== iop[11];
  out_tmp[12] <== iop[12];
  out_tmp[13] <== iop[13];
  out_tmp[14] <== iop[14];
  out_tmp[15] <== iop[15];
  out_tmp[16] <== iop[16];
  out_tmp[17] <== iop[17];
  out_tmp[18] <== iop[18];
  out_tmp[19] <== iop[19];
  out_tmp[20] <== iop[20];
  out_tmp[21] <== iop[21];
  out_tmp[22] <== iop[22];
  out_tmp[23] <== iop[23];
  out_tmp[24] <== iop[24];
  out_tmp[25] <== iop[25];
  out_tmp[26] <== iop[26];
  out_tmp[27] <== iop[27];
  out_tmp[28] <== iop[28];
  out_tmp[29] <== iop[29];
  out_tmp[30] <== iop[30];
  out_tmp[31] <== iop[31];
  codeRoot <== comp_40.out;
  out[0] <== 0 + 1 * out_tmp[0] + 65536 * out_tmp[1] + 4294967296 * out_tmp[2] + 281474976710656 * out_tmp[3] + 18446744073709551616 * out_tmp[4] + 1208925819614629174706176 * out_tmp[5] + 79228162514264337593543950336 * out_tmp[6] + 5192296858534827628530496329220096 * out_tmp[7] ;
  out[1] <== 0 + 1 * out_tmp[8] + 65536 * out_tmp[9] + 4294967296 * out_tmp[10] + 281474976710656 * out_tmp[11] + 18446744073709551616 * out_tmp[12] + 1208925819614629174706176 * out_tmp[13] + 79228162514264337593543950336 * out_tmp[14] + 5192296858534827628530496329220096 * out_tmp[15] ;
  out[2] <== 0 + 1 * out_tmp[16] + 65536 * out_tmp[17] + 4294967296 * out_tmp[18] + 281474976710656 * out_tmp[19] + 18446744073709551616 * out_tmp[20] + 1208925819614629174706176 * out_tmp[21] + 79228162514264337593543950336 * out_tmp[22] + 5192296858534827628530496329220096 * out_tmp[23] ;
  out[3] <== 0 + 1 * out_tmp[24] + 65536 * out_tmp[25] + 4294967296 * out_tmp[26] + 281474976710656 * out_tmp[27] + 18446744073709551616 * out_tmp[28] + 1208925819614629174706176 * out_tmp[29] + 79228162514264337593543950336 * out_tmp[30] + 5192296858534827628530496329220096 * out_tmp[31] ;
}